// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Volunteer {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  username    String?  @unique
  phoneNumber BigInt
  email       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Task {
  id   Int          @id @default(autoincrement())
  task TaskStatus[]
}

model TaskStatus {
  id        Int      @id @default(autoincrement())
  taskId    Int
  task      Task     @relation(fields: [taskId], references: [id])
  status    Boolean
  createdAt DateTime @default(now()) @unique
  updatedAt DateTime @updatedAt
}

model Responsible {
  id                   Int      @id @default(autoincrement())
  morningResponsible   String?
  afternoonResponsible String?
  createdAt            DateTime @unique @default(now())
}

model DeliveryRecord {
  id             Int       @id @default(autoincrement())
  quantity       Int
  article        String
  deliveredAt    DateTime  @default(now())
  deliveredTo    String
  receivedAt     DateTime?
  receivedStatus Boolean   @default(false)
}

model Status {
  id     Int     @id @default(autoincrement())
  status Items[]
}

model InventoryNotes {
  id   Int     @id @default(autoincrement())
  note Items[]
}

model Items {
  id         Int            @id @default(autoincrement())
  item       String
  incomeDate DateTime       @default(now())
  status     Status         @relation(fields: [statusId], references: [id])
  statusId   Int
  note       InventoryNotes @relation(fields: [noteId], references: [id])
  noteId     Int
  pictureUrl String
}
